0.介绍
版权所有，林孟潇<linmx14@fudan.edu.cn>，所有权利保留。
请查看COPYING来得到更多关于授权的信息。

1 设计结构
	Kernel 和 UI 两个大模块相对分立。
	Kernel负责管理游戏的逻辑部分，而UI负责接受用户请求，向用户反馈信息。
1.1 Kernel的结构
	为了能更好扩展，Kernel有一定的结构，划分成多个组件。
1.1.1 基本设施
	* MainController:主控制器，调用主循环来不断产生游戏事件
	* MapManager:管理玩家的移动、由于地图地点产生的各种时间
	* User:玩家类，保存玩家的基本信息
1.1.2 地图单元
	* AbstractLand: 地图单元抽象类，是所有地图单元的基类
	* EmptyLand: 空土地类，详见2.3.1

2 地图文件
2.1 加载规则
	地图文件应该由MapManager.loadMap()来加载。而对于地图中每一个特定的单元，MapManager读取了其标示号之后，应当交给该单元的loader()方法来加载。
2.2 地图文件框架
	第一行：地图头
	地图头包含三个整数N,Y,X，表示总共有N个地图单元，网格由X行Y列所构成。
	接下来有N个地图单元的信息，对于每个地图单元信息，有：
		第一行：单元头
		单元头包含三个整数typeId,y,x，分别是单元标示号typeId，纵坐标y和横坐标x。
		接下来是该单元的其他信息，这部分由单元自己的loader()来加载。

2.3 各类地铁单元
2.3.1 空土地 EmptyLand
	空土地的typeId=1。
	它不具备任何特定的信息，不触发任何事件，仅仅是空土地而已。

	
